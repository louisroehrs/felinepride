; =======================
; Shiro INI configuration
; =======================

[main]
; Objects and their properties are defined here, 
; Such as the securityManager, Realms and anything
; else needed to build the SecurityManager

sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
; Rename JSESSIONID to not conflit with Liferay session
sessionManager.sessionIdCookie.name = ESS_SESSIONID
; Require HTTPS connection for cookie storage
; MUST BE TRUE IN PRODUCTION
sessionManager.sessionIdCookie.secure = true
# we have configured Hazelcast to enforce a TTL for the activeSessions Map.  No need for Shiro to invalidate!
sessionManager.sessionValidationSchedulerEnabled = false
; Use the configured native session manager:
securityManager.sessionManager = $sessionManager
; configure properties (like session timeout in ms) here if desired
; The session will timeout after the lesser of the global session timeout or the active session cache timeout
; set in the cache manager configuration
securityManager.sessionManager.globalSessionTimeout = 86400000
; Don't use default rememberMe key.  Generated new key with following:
; org.apache.shiro.codec.Base64.encodeToString(new AesCipherService().generateNewKey().getEncoded())
securityManager.rememberMeManager.cipherKey = NoIw91X9GSiCrLCF03ZGZw==
; Add session and cache manager
sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
securityManager.sessionManager.sessionDAO = $sessionDAO
cacheManager = com.felinepride.x1.tech.bluewizard.auth.cache.HazelcastCacheManager
securityManager.cacheManager = $cacheManager

; Stop checking realms after first success
authcStrategy = org.apache.shiro.authc.pam.FirstSuccessfulStrategy
securityManager.authenticator.authenticationStrategy = $authcStrategy

; BlueIdRealm Pac4j Realm (OpenID Connect)
; Login URL: https://prepiam.toronto.ca.ibm.com/idaas/oidc/endpoint/default/authorize?response_type=code&scope=openid&client_id=MWQ3M2U4MzMtY2ZhNS00&redirect_uri=https://localhost:8443/service/authc/oidc
;blueIdClient = com.felinepride.x1.tech.bluewizard.auth.blueid.BlueIdClient
;blueIdClient.clientId = MWQ3M2U4MzMtY2ZhNS00
;blueIdClient.secret = OWIxMzlmMGYtZDdlZS00
;blueIdClient.useNonce = false
;blueIdClient.jwksUri = http://localhost:9080/data/blueid-preprod-jwk.json
;blueIdClient.authorizationEndpoint = https://prepiam.toronto.ca.ibm.com/idaas/oidc/endpoint/default/authorize
;blueIdClient.tokenEndpoint = https://prepiam.toronto.ca.ibm.com/idaas/oidc/endpoint/default/token
;blueIdClient.userinfoEndpoint = https://prepiam.toronto.ca.ibm.com/idaas/oidc/endpoint/default/userinfo
;blueIdClient.issuer = https://prepiam.toronto.ca.ibm.com
;blueIdClient.callbackUrl = https://localhost:8443/service/authc/oidc

clients = org.pac4j.core.client.Clients
clients.clients = $blueIdClient
clients.defaultClient = $blueIdClient

config = org.pac4j.core.config.Config
config.clients = $clients

;blueIdCallbackFilter = com.felinepride.x1.tech.bluewizard.auth.blueid.BlueIdCallbackFilter
;blueIdCallbackFilter.config = $config
;blueIdCallbackFilter.defaultUrl = https://localhost:8443/service/v1/auth/login
;blueIdCallbackFilter.successUrl = https://localhost:8443/admin/essms/html/login.html
;blueIdCallbackFilter.failureUrl = https://prepiam.toronto.ca.ibm.com/idaas/oidc/endpoint/default/authorize?response_type=code&scope=openid&client_id=MWQ3M2U4MzMtY2ZhNS00&redirect_uri=https://localhost:8443/service/authc/oidc

;blueIdCallbackFilter.failureUrl = https://localhost:8443/service/v1/auth/login

;blueIdRealm = com.felinepride.commerce.ess.v1.auth.EssBlueIdRealm

; SAML 2 Account Realm
;saml2AccountRealm = com.felinepride.x1.tech.bluewizard.auth.Saml2AccountRealm

; ApiKey Realm
;apiKeyRealm = com.felinepride.commerce.ess.v1.auth.ApiKeyRealm

; ApiKeyRealm should not store session information
;apiSessionStorageEvaluator = com.felinepride.x1.tech.bluewizard.auth.ApiSessionStorageEvaluator
;securityManager.subjectDAO.sessionStorageEvaluator = $apiSessionStorageEvaluator

; Session Token Realm
;sessionTokenRealm = com.felinepride.x1.tech.bluewizard.auth.SessionTokenRealm

; Use for building a Shiro subject authenticated by pac4j
;blueIdSubjectFactory = com.felinepride.x1.tech.bluewizard.auth.blueid.BlueIdSubjectFactory
;securityManager.subjectFactory = $blueIdSubjectFactory

;securityManager.realms = $sessionTokenRealm,$blueIdRealm

[users]
; The 'users' section is for simple deployments
; when you only need a small number of statically-defined 
; set of User accounts.

[roles]
; The 'roles' section is for simple deployments
; when you only need a small number of statically-defined
; roles.

[urls]
; The 'urls' section is used for url-based security
; in web applications.  We'll discuss this section in the
; Web documentation
;/service/authc/oidc = blueIdCallbackFilter[blueId]
;/service/authc/blueid = blueIdCallbackFilter[blueId]
;/service/authc/logout = logout
